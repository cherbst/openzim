<?php

require_once(dirname(__FILE__).'/../../odtphp/library/odf.php');
/**
 * Anlage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    openZIM
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Anlage extends BaseAnlage
{
	public function save(Doctrine_Connection $conn = null)
	{  
	
		$conn = $conn ? $conn : $this->getTable()->getConnection();
  		$conn->beginTransaction();
  		try
  		{
 			$ret = parent::save($conn);
 			$this->updateLuceneIndex();
     			$conn->commit();
 
    			return $ret;
  		}
  		catch (Exception $e)
  		{
    			$conn->rollBack();
    			throw $e;
  		}

	}

	public function delete(Doctrine_Connection $conn = null)
	{
  		$index = AnlageTable::getLuceneIndex();
 
  		foreach ($index->find('pk:'.$this->getId()) as $hit)
  		{
    			$index->delete($hit->id);
  		}
 
  		return parent::delete($conn);
	}

	public function updateLuceneIndex()
	{
  		$index = AnlageTable::getLuceneIndex();
 
  		// remove existing entries
  		foreach ($index->find('pk:'.$this->getId()) as $hit)
  		{
    			$index->delete($hit->id);
  		}
 
  		$doc = new Zend_Search_Lucene_Document();
 
  		// store primary key to identify it in the search results
  		$doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));
 
  		// index anlage fields
  		$doc->addField(Zend_Search_Lucene_Field::UnStored('name', $this->getName(), 'utf-8'));
  		$doc->addField(Zend_Search_Lucene_Field::UnStored('ziel', $this->getZiel(), 'utf-8'));
  		$doc->addField(Zend_Search_Lucene_Field::UnStored('inhalt', $this->getInhalt(), 'utf-8'));
 
  		// add anlage to the index
  		$index->addDocument($doc);
  		$index->commit();
	}
	
        public function generateOdf()
	{
	
		$odf = new odf(dirname(__FILE__).'/../../odftmp/Anlage_template.odt');
	   	$odf->setVars('zeit', $this->getZeit(), false);
		$odf->setVars('ziel', $this->getZiel(), false,'UTF-8');
		$odf->setVars('tip', $this->getTip(), false,'UTF-8');
		$odf->setVars('Inhalt', $this->getInhalt(),false,'UTF-8');
		$odf->setVars('methode', $this->getMethode(), false,'UTF-8');
		$odf->setVars('material', $this->getMaterial(), false,'UTF-8');
		$odf->exportAsAttachedFile ($this->getName().'.odt');  
        }
}
